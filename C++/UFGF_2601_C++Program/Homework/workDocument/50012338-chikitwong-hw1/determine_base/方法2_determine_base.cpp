#include<iostream>
using namespace std;

//没有cmath，只能自己写一个简陋的取幂函数
int pow(int a,int b){
? ? if (b==0)
? ? {
? ? ? ? a=1;
? ? }
? ? else
? ? {
? ? ? ? for (int i=0; i<(b-1);i++)
? ? ? ? {
? ? ? ? ? ? a*=a;
? ? ? ? }
? ? }
? ? return a;
}

//获取最大数字
int max(int num){
? ? int max=0,temp=0;
? ? for (int i=0;i<6;i++)
? ? {
? ? ? ? temp=num%10;
? ? ? ? num /= 10;
? ? ? ? if (temp>max)
? ? ? ? {
? ? ? ? ? ? max=temp;
? ? ? ? }
? ? }
? ? return max;
}

//进行进制转换 num为转换数字，base为num的进制
int der(int num,int base){
? ? int a;int b=0;
? ? for (int i=0;i<6;i++)//6位数
? ? {
? ? ? ? a=num%10;
? ? ? ? num/=10;
? ? ? ? b += a*(pow(base,i));
? ? }
? ? return b;
}


int main(){
? ? //获取p,q,r
? ? //获取minbase（输入数字中最小的数字），以确定最小可能进制
? ? int p=0,q=0,r=0,minbase;
? ? cin>>p;cin>>q;cin>>r;
? ? //获取每个输入中最小的数字
? ? int a=max(p);int b=max(q);int c=max(r);int base=0;//默认进制输出0
? ? (a>=b?(a>=c?minbase=a:minbase=c):(b>=c?minbase=b:minbase=c));
? ? //循环寻找进制，一旦找到便退出确定最小
? ? //minbase需加一，因为最大数不等于进制
? ? for (int i=minbase++;i<=16;i++)
? ? {
? ? ? ? if(der(p,i) * der(q,i)==der(r,i))//判断进制后是否满足条件
? ? ? ? {
? ? ? ? base = i;
? ? ? ? break;
? ? ? ? }
? ? }
? ? cout<<base<<endl;
? ? return 0;
}